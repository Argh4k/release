dependencies:
  # Bazel
  - name: "repo-infra"
    version: 0.0.10
    refPaths:
    - path: build/root/WORKSPACE
      match: strip_prefix = "repo-infra-\d+.\d+.\d+"
    - path: build/root/WORKSPACE
      match: https://github.com/kubernetes/repo-infra/archive/v\d+.\d+.\d+.tar.gz

  # CNI plugins
  - name: "cni"
    version: 0.8.6
    refPaths:
    - path: build/debian-hyperkube-base/Makefile
      match: CNI_VERSION\?=
    - path: build/workspace.bzl
      match: CNI_VERSION =
    - path: cluster/gce/gci/configure.sh
      match: DEFAULT_CNI_VERSION=
    - path: cluster/gce/config-common.sh
      match: WINDOWS_CNI_VERSION=
    - path: test/e2e_node/remote/utils.go
      match: cniVersion[\t\n\f\r ]*=

  # CRI Tools
  - name: "crictl"
    version: 1.18.0
    refPaths:
    - path: build/workspace.bzl
      match: CRI_TOOLS_VERSION =
    - path: cluster/gce/gci/configure.sh
      match: DEFAULT_CRICTL_VERSION=
    - path: cluster/gce/windows/k8s-node-setup.psm1
      match: CRICTL_VERSION =

  # Docker
  - name: "docker"
    version: 19.03
    refPaths:
    - path: vendor/k8s.io/system-validators/validators/docker_validator.go
      match: latestValidatedDockerVersion

  # etcd
  - name: "etcd"
    version: 3.4.9
    refPaths:
    - path: cluster/gce/manifests/etcd.manifest
      match: etcd_docker_tag|etcd_version
    - path: build/workspace.bzl
      match: ETCD_VERSION
    - path: cluster/gce/upgrade-aliases.sh
      match: ETCD_IMAGE|ETCD_VERSION
    - path: cmd/kubeadm/app/constants/constants.go
    - path: hack/lib/etcd.sh
      match: ETCD_VERSION=
    - path: staging/src/k8s.io/sample-apiserver/artifacts/example/deployment.yaml
      match: quay.io/coreos/etcd
    - path: test/e2e/framework/nodes_util.go
      match: const etcdImage

  # Golang
  - name: "golang"
    version: 1.15.0-rc.1
    refPaths:
    - path: build/build-image/cross/VERSION
    - path: build/root/WORKSPACE
      match: (override_)?go_version = "((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)"

  - name: "golang: upstream container image"
    version: 1.15rc1
    refPaths:
    - path: test/images/Makefile
      match: GOLANG_VERSION=\d+.\d+(alpha|beta|rc)\d+

  # Base images
  - name: "k8s.gcr.io/debian-base"
    version: 2.1.2
    refPaths:
    - path: build/debian-base/Makefile
      match: TAG \?=

  - name: "k8s.gcr.io/debian-base: dependents"
    version: 2.1.0
    refPaths:
    - path: build/common.sh
      match: debian_base_version=
    - path: build/workspace.bzl
      match: tag =
    - path: build/debian-iptables/Makefile
      match: BASEIMAGE\?\=\$\(BASE_REGISTRY\)\/debian-base-\$\(ARCH\)
    - path: cluster/images/etcd/Makefile
      match: BASEIMAGE\?\=k8s\.gcr\.io\/build-image\/debian-base:v\d+\.\d+\.\d+
    - path: cluster/images/etcd/Makefile
      match: BASEIMAGE\?\=k8s\.gcr\.io\/build-image\/debian-base-arm:v\d+\.\d+\.\d+
    - path: cluster/images/etcd/Makefile
      match: BASEIMAGE\?\=k8s\.gcr\.io\/build-image\/debian-base-arm64:v\d+\.\d+\.\d+
    - path: cluster/images/etcd/Makefile
      match: BASEIMAGE\?\=k8s\.gcr\.io\/build-image\/debian-base-ppc64le:v\d+\.\d+\.\d+
    - path: cluster/images/etcd/Makefile
      match: BASEIMAGE\?\=k8s\.gcr\.io\/build-image\/debian-base-s390x:v\d+\.\d+\.\d+

  - name: "k8s.gcr.io/debian-hyperkube-base"
    version: 1.1.1
    refPaths:
    - path: build/debian-hyperkube-base/Makefile
      match: TAG\?=

  - name: "k8s.gcr.io/debian-iptables"
    version: 12.1.0
    refPaths:
    - path: build/debian-iptables/Makefile
      match: TAG\?=

  - name: "k8s.gcr.io/debian-iptables: dependents"
    version: 12.1.0
    refPaths:
    - path: build/common.sh
      match: debian_iptables_version=
    - path: build/debian-hyperkube-base/Makefile
      match: BASEIMAGE\?\=\$\(BASE_REGISTRY\)\/debian-iptables-\$\(ARCH\):v\d+\.\d+\.\d+
    - path: build/workspace.bzl
      match: tag =
    - path: test/utils/image/manifest.go
      match: configs\[DebianIptables\] = Config{buildImageRegistry, "debian-iptables", "v\d+\.\d+.\d+"}
